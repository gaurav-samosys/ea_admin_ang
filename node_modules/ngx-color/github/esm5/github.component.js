import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input, NgModule, } from '@angular/core';
import { ColorWrap, SwatchModule, isValidHex } from 'ngx-color';
import { GithubSwatchComponent } from './github-swatch.component';
var GithubComponent = /** @class */ (function (_super) {
    tslib_1.__extends(GithubComponent, _super);
    function GithubComponent() {
        var _this = _super.call(this) || this;
        /** Pixel value for picker width */
        _this.width = 212;
        /** Color squares to display */
        _this.colors = [
            '#B80000',
            '#DB3E00',
            '#FCCB00',
            '#008B02',
            '#006B76',
            '#1273DE',
            '#004DCF',
            '#5300EB',
            '#EB9694',
            '#FAD0C3',
            '#FEF3BD',
            '#C1E1C5',
            '#BEDADC',
            '#C4DEF6',
            '#BED3F3',
            '#D4C4FB',
        ];
        _this.triangle = 'top-left';
        return _this;
    }
    GithubComponent.prototype.handleBlockChange = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        if (isValidHex(hex)) {
            this.handleChange({ hex: hex, source: 'hex' }, $event);
        }
    };
    GithubComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], GithubComponent.prototype, "width", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], GithubComponent.prototype, "colors", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], GithubComponent.prototype, "triangle", void 0);
    GithubComponent = tslib_1.__decorate([
        Component({
            selector: 'color-github',
            template: "\n  <div class=\"github-picker {{ triangle }}-triangle {{ className }}\"\n    [style.width.px]=\"width\"\n  >\n    <div class=\"triangleShadow\"></div>\n    <div class=\"triangle\"></div>\n    <color-github-swatch *ngFor=\"let color of colors\"\n      [color]=\"color\"\n      (onClick)=\"handleBlockChange($event)\"\n      (onSwatchHover)=\"onSwatchHover.emit($event)\"\n    ></color-github-swatch>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n  .github-picker {\n    background: rgb(255, 255, 255);\n    border: 1px solid rgba(0, 0, 0, 0.2);\n    box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\n    border-radius: 4px;\n    position: relative;\n    padding: 5px;\n    display: flex;\n    flex-wrap: wrap;\n    box-sizing: border-box;\n  }\n  .triangleShadow {\n    position: absolute;\n    border-width: 8px;\n    border-style: solid;\n    border-color: transparent transparent rgba(0, 0, 0, 0.15);\n    border-image: initial;\n  }\n  .triangle {\n    position: absolute;\n    border-width: 7px;\n    border-style: solid;\n    border-color: transparent transparent rgb(255, 255, 255);\n    border-image: initial;\n  }\n  .hide-triangle > .triangle {\n    display: none;\n  }\n  .hide-triangle > .triangleShadow {\n    display: none;\n  }\n  .top-left-triangle > .triangle {\n    top: -14px;\n    left: 10px;\n  }\n  .top-left-triangle > .triangleShadow {\n    top: -16px;\n    left: 9px;\n  }\n  .top-right-triangle > .triangle {\n    top: -14px;\n    right: 10px;\n  }\n  .top-right-triangle > .triangleShadow {\n    top: -16px;\n    right: 9px;\n  }\n  .bottom-right-triangle > .triangle {\n    top: 35px;\n    right: 10px;\n    transform: rotate(180deg);\n  }\n  .bottom-right-triangle > .triangleShadow {\n    top: 37px;\n    right: 9px;\n    transform: rotate(180deg);\n  }\n  "]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], GithubComponent);
    return GithubComponent;
}(ColorWrap));
export { GithubComponent };
var ColorGithubModule = /** @class */ (function () {
    function ColorGithubModule() {
    }
    ColorGithubModule = tslib_1.__decorate([
        NgModule({
            declarations: [GithubComponent, GithubSwatchComponent],
            exports: [GithubComponent, GithubSwatchComponent],
            imports: [CommonModule, SwatchModule],
        })
    ], ColorGithubModule);
    return ColorGithubModule;
}());
export { ColorGithubModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb2xvci9naXRodWIvIiwic291cmNlcyI6WyJnaXRodWIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUNMLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDaEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFpRmxFO0lBQXFDLDJDQUFTO0lBd0I1QztRQUFBLFlBQ0UsaUJBQU8sU0FDUjtRQXpCRCxtQ0FBbUM7UUFDMUIsV0FBSyxHQUFvQixHQUFHLENBQUM7UUFDdEMsK0JBQStCO1FBQ3RCLFlBQU0sR0FBRztZQUNoQixTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1lBQ1QsU0FBUztZQUNULFNBQVM7WUFDVCxTQUFTO1NBQ1YsQ0FBQztRQUNPLGNBQVEsR0FBdUQsVUFBVSxDQUFDOztJQUluRixDQUFDO0lBRUQsMkNBQWlCLEdBQWpCLFVBQWtCLEVBQWU7WUFBYixZQUFHLEVBQUUsa0JBQU07UUFDN0IsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLEdBQUcsS0FBQSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNuRDtJQUNILENBQUM7SUFDRCwyQ0FBaUIsR0FBakIsVUFBa0IsRUFBZ0I7WUFBZCxjQUFJLEVBQUUsa0JBQU07UUFDOUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQWpDUTtRQUFSLEtBQUssRUFBRTs7a0RBQThCO0lBRTdCO1FBQVIsS0FBSyxFQUFFOzttREFpQk47SUFDTztRQUFSLEtBQUssRUFBRTs7cURBQTJFO0lBdEJ4RSxlQUFlO1FBL0UzQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsY0FBYztZQUN4QixRQUFRLEVBQUUsK1pBWVQ7WUE4REQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07WUFDL0MsbUJBQW1CLEVBQUUsS0FBSztxQkE3RHhCLDh6Q0EwREQ7U0FJRixDQUFDOztPQUNXLGVBQWUsQ0FvQzNCO0lBQUQsc0JBQUM7Q0FBQSxBQXBDRCxDQUFxQyxTQUFTLEdBb0M3QztTQXBDWSxlQUFlO0FBMkM1QjtJQUFBO0lBQWdDLENBQUM7SUFBcEIsaUJBQWlCO1FBTDdCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLGVBQWUsRUFBRSxxQkFBcUIsQ0FBQztZQUN0RCxPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUscUJBQXFCLENBQUM7WUFDakQsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztTQUN0QyxDQUFDO09BQ1csaUJBQWlCLENBQUc7SUFBRCx3QkFBQztDQUFBLEFBQWpDLElBQWlDO1NBQXBCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBJbnB1dCxcbiAgTmdNb2R1bGUsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb2xvcldyYXAsIFN3YXRjaE1vZHVsZSwgaXNWYWxpZEhleCB9IGZyb20gJ25neC1jb2xvcic7XG5pbXBvcnQgeyBHaXRodWJTd2F0Y2hDb21wb25lbnQgfSBmcm9tICcuL2dpdGh1Yi1zd2F0Y2guY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3ItZ2l0aHViJyxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiBjbGFzcz1cImdpdGh1Yi1waWNrZXIge3sgdHJpYW5nbGUgfX0tdHJpYW5nbGUge3sgY2xhc3NOYW1lIH19XCJcbiAgICBbc3R5bGUud2lkdGgucHhdPVwid2lkdGhcIlxuICA+XG4gICAgPGRpdiBjbGFzcz1cInRyaWFuZ2xlU2hhZG93XCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInRyaWFuZ2xlXCI+PC9kaXY+XG4gICAgPGNvbG9yLWdpdGh1Yi1zd2F0Y2ggKm5nRm9yPVwibGV0IGNvbG9yIG9mIGNvbG9yc1wiXG4gICAgICBbY29sb3JdPVwiY29sb3JcIlxuICAgICAgKG9uQ2xpY2spPVwiaGFuZGxlQmxvY2tDaGFuZ2UoJGV2ZW50KVwiXG4gICAgICAob25Td2F0Y2hIb3Zlcik9XCJvblN3YXRjaEhvdmVyLmVtaXQoJGV2ZW50KVwiXG4gICAgPjwvY29sb3ItZ2l0aHViLXN3YXRjaD5cbiAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgLmdpdGh1Yi1waWNrZXIge1xuICAgIGJhY2tncm91bmQ6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMik7XG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE1KSAwcHggM3B4IDEycHg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgfVxuICAudHJpYW5nbGVTaGFkb3cge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBib3JkZXItd2lkdGg6IDhweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgICBib3JkZXItaW1hZ2U6IGluaXRpYWw7XG4gIH1cbiAgLnRyaWFuZ2xlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYm9yZGVyLXdpZHRoOiA3cHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgICBib3JkZXItaW1hZ2U6IGluaXRpYWw7XG4gIH1cbiAgLmhpZGUtdHJpYW5nbGUgPiAudHJpYW5nbGUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhpZGUtdHJpYW5nbGUgPiAudHJpYW5nbGVTaGFkb3cge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnRvcC1sZWZ0LXRyaWFuZ2xlID4gLnRyaWFuZ2xlIHtcbiAgICB0b3A6IC0xNHB4O1xuICAgIGxlZnQ6IDEwcHg7XG4gIH1cbiAgLnRvcC1sZWZ0LXRyaWFuZ2xlID4gLnRyaWFuZ2xlU2hhZG93IHtcbiAgICB0b3A6IC0xNnB4O1xuICAgIGxlZnQ6IDlweDtcbiAgfVxuICAudG9wLXJpZ2h0LXRyaWFuZ2xlID4gLnRyaWFuZ2xlIHtcbiAgICB0b3A6IC0xNHB4O1xuICAgIHJpZ2h0OiAxMHB4O1xuICB9XG4gIC50b3AtcmlnaHQtdHJpYW5nbGUgPiAudHJpYW5nbGVTaGFkb3cge1xuICAgIHRvcDogLTE2cHg7XG4gICAgcmlnaHQ6IDlweDtcbiAgfVxuICAuYm90dG9tLXJpZ2h0LXRyaWFuZ2xlID4gLnRyaWFuZ2xlIHtcbiAgICB0b3A6IDM1cHg7XG4gICAgcmlnaHQ6IDEwcHg7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbiAgfVxuICAuYm90dG9tLXJpZ2h0LXRyaWFuZ2xlID4gLnRyaWFuZ2xlU2hhZG93IHtcbiAgICB0b3A6IDM3cHg7XG4gICAgcmlnaHQ6IDlweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICB9XG4gIGAsXG4gIF0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcmVzZXJ2ZVdoaXRlc3BhY2VzOiBmYWxzZSxcbn0pXG5leHBvcnQgY2xhc3MgR2l0aHViQ29tcG9uZW50IGV4dGVuZHMgQ29sb3JXcmFwIHtcbiAgLyoqIFBpeGVsIHZhbHVlIGZvciBwaWNrZXIgd2lkdGggKi9cbiAgQElucHV0KCkgd2lkdGg6IHN0cmluZyB8IG51bWJlciA9IDIxMjtcbiAgLyoqIENvbG9yIHNxdWFyZXMgdG8gZGlzcGxheSAqL1xuICBASW5wdXQoKSBjb2xvcnMgPSBbXG4gICAgJyNCODAwMDAnLFxuICAgICcjREIzRTAwJyxcbiAgICAnI0ZDQ0IwMCcsXG4gICAgJyMwMDhCMDInLFxuICAgICcjMDA2Qjc2JyxcbiAgICAnIzEyNzNERScsXG4gICAgJyMwMDREQ0YnLFxuICAgICcjNTMwMEVCJyxcbiAgICAnI0VCOTY5NCcsXG4gICAgJyNGQUQwQzMnLFxuICAgICcjRkVGM0JEJyxcbiAgICAnI0MxRTFDNScsXG4gICAgJyNCRURBREMnLFxuICAgICcjQzRERUY2JyxcbiAgICAnI0JFRDNGMycsXG4gICAgJyNENEM0RkInLFxuICBdO1xuICBASW5wdXQoKSB0cmlhbmdsZTogJ2hpZGUnIHwgJ3RvcC1sZWZ0JyB8ICd0b3AtcmlnaHQnIHwgJ2JvdHRvbS1yaWdodCcgPSAndG9wLWxlZnQnO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBoYW5kbGVCbG9ja0NoYW5nZSh7IGhleCwgJGV2ZW50IH0pIHtcbiAgICBpZiAoaXNWYWxpZEhleChoZXgpKSB7XG4gICAgICB0aGlzLmhhbmRsZUNoYW5nZSh7IGhleCwgc291cmNlOiAnaGV4JyB9LCAkZXZlbnQpO1xuICAgIH1cbiAgfVxuICBoYW5kbGVWYWx1ZUNoYW5nZSh7IGRhdGEsICRldmVudCB9KSB7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2UoZGF0YSwgJGV2ZW50KTtcbiAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtHaXRodWJDb21wb25lbnQsIEdpdGh1YlN3YXRjaENvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtHaXRodWJDb21wb25lbnQsIEdpdGh1YlN3YXRjaENvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFN3YXRjaE1vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIENvbG9yR2l0aHViTW9kdWxlIHt9XG4iXX0=