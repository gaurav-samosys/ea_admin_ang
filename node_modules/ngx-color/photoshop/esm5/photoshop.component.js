import * as tslib_1 from "tslib";
import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, EventEmitter, Input, NgModule, Output, } from '@angular/core';
import { ColorWrap, AlphaModule, EditableInputModule, HueModule, SaturationModule, SwatchModule, } from 'ngx-color';
import { PhotoshopButtonComponent } from './photoshop-button.component';
import { PhotoshopFieldsComponent } from './photoshop-fields.component';
import { PhotoshopPreviewsComponent } from './photoshop-previews.component';
var PhotoshopComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PhotoshopComponent, _super);
    function PhotoshopComponent() {
        var _this = _super.call(this) || this;
        /** Title text */
        _this.header = 'Color Picker';
        _this.onAccept = new EventEmitter();
        _this.onCancel = new EventEmitter();
        _this.circle = {
            width: '12px',
            height: '12px',
            borderRadius: '6px',
            boxShadow: 'rgb(255, 255, 255) 0px 0px 0px 1px inset',
            transform: 'translate(-6px, -10px)',
        };
        return _this;
    }
    PhotoshopComponent.prototype.handleValueChange = function (_a) {
        var data = _a.data, $event = _a.$event;
        this.handleChange(data, $event);
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], PhotoshopComponent.prototype, "header", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], PhotoshopComponent.prototype, "onAccept", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], PhotoshopComponent.prototype, "onCancel", void 0);
    PhotoshopComponent = tslib_1.__decorate([
        Component({
            selector: 'color-photoshop',
            template: "\n  <div class=\"photoshop-picker {{ className }}\">\n    <div class=\"photoshop-head\">{{ header }}</div>\n    <div class=\"photoshop-body\">\n      <div class=\"photoshop-saturation\">\n        <color-saturation\n          [hsl]=\"hsl\" [hsv]=\"hsv\" [circle]=\"circle\"\n          (onChange)=\"handleValueChange($event)\"\n        ></color-saturation>\n      </div>\n      <div class=\"photoshop-hue\">\n        <color-hue direction=\"vertical\"\n          [hsl]=\"hsl\" [hidePointer]=\"true\"\n          (onChange)=\"handleValueChange($event)\"\n        ></color-hue>\n      </div>\n      <div class=\"photoshop-controls\">\n        <div class=\"photoshop-top\">\n          <div class=\"photoshop-previews\">\n            <color-photoshop-previews\n              [rgb]=\"rgb\" [currentColor]=\"currentColor\"\n            ></color-photoshop-previews>\n          </div>\n          <div class=\"photoshop-actions\">\n            <color-photoshop-button label=\"OK\"\n              [active]=\"true\" (onClick)=\"onAccept.emit($event)\"\n            ></color-photoshop-button>\n            <color-photoshop-button label=\"Cancel\"\n              (onClick)=\"onCancel.emit($event)\"\n            >\n            </color-photoshop-button>\n            <color-photoshop-fields\n              [rgb]=\"rgb\" [hex]=\"hex\" [hsv]=\"hsv\"\n              (onChange)=\"handleValueChange($event)\"\n            ></color-photoshop-fields>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .photoshop-picker {\n      background: rgb(220, 220, 220);\n      border-radius: 4px;\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 0px 1px, rgba(0, 0, 0, 0.15) 0px 8px 16px;\n      box-sizing: initial; width: 513px;\n    }\n    .photoshop-head {\n      background-image: linear-gradient(\n        -180deg,\n        rgb(240, 240, 240) 0%,\n        rgb(212, 212, 212) 100%\n      );\n      border-bottom: 1px solid rgb(177, 177, 177);\n      box-shadow: rgba(255, 255, 255, 0.2) 0px 1px 0px 0px inset,\n        rgba(0, 0, 0, 0.02) 0px -1px 0px 0px inset;\n      height: 23px;\n      line-height: 24px;\n      border-radius: 4px 4px 0px 0px;\n      font-size: 13px;\n      color: rgb(77, 77, 77);\n      text-align: center;\n    }\n    .photoshop-body {\n      padding: 15px 15px 0px;\n      display: flex;\n    }\n    .photoshop-saturation {\n      width: 256px;\n      height: 256px;\n      position: relative;\n      border-width: 2px;\n      border-style: solid;\n      border-color: rgb(179, 179, 179) rgb(179, 179, 179) rgb(240, 240, 240);\n      border-image: initial;\n      overflow: hidden;\n    }\n    .photoshop-hue {\n      position: relative;\n      height: 256px;\n      width: 23px;\n      margin-left: 10px;\n      border-width: 2px;\n      border-style: solid;\n      border-color: rgb(179, 179, 179) rgb(179, 179, 179) rgb(240, 240, 240);\n      border-image: initial;\n    }\n    .photoshop-controls {\n      width: 180px;\n      margin-left: 10px;\n    }\n    .photoshop-top {\n      display: flex;\n    }\n    .photoshop-previews {\n      width: 60px;\n    }\n    .photoshop-actions {\n      -webkit-box-flex: 1;\n      flex: 1 1 0%;\n      margin-left: 20px;\n    }\n  "]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], PhotoshopComponent);
    return PhotoshopComponent;
}(ColorWrap));
export { PhotoshopComponent };
var ColorPhotoshopModule = /** @class */ (function () {
    function ColorPhotoshopModule() {
    }
    ColorPhotoshopModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                PhotoshopComponent,
                PhotoshopPreviewsComponent,
                PhotoshopButtonComponent,
                PhotoshopFieldsComponent,
            ],
            exports: [
                PhotoshopComponent,
                PhotoshopPreviewsComponent,
                PhotoshopButtonComponent,
                PhotoshopFieldsComponent,
            ],
            imports: [
                CommonModule,
                EditableInputModule,
                HueModule,
                AlphaModule,
                SwatchModule,
                SaturationModule,
            ],
        })
    ], ColorPhotoshopModule);
    return ColorPhotoshopModule;
}());
export { ColorPhotoshopModule };
//# sourceMappingURL=data:application/json;base64,