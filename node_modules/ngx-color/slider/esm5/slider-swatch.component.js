import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
var SliderSwatchComponent = /** @class */ (function () {
    function SliderSwatchComponent() {
        this.first = false;
        this.last = false;
        this.onClick = new EventEmitter();
    }
    SliderSwatchComponent.prototype.ngOnChanges = function () {
        this.background = "hsl(" + this.hsl.h + ", 50%, " + this.offset * 100 + "%)";
    };
    SliderSwatchComponent.prototype.handleClick = function ($event) {
        this.onClick.emit({
            data: {
                h: this.hsl.h,
                s: 0.5,
                l: this.offset,
                source: 'hsl',
            },
            $event: $event,
        });
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], SliderSwatchComponent.prototype, "hsl", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], SliderSwatchComponent.prototype, "active", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], SliderSwatchComponent.prototype, "offset", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], SliderSwatchComponent.prototype, "first", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], SliderSwatchComponent.prototype, "last", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], SliderSwatchComponent.prototype, "onClick", void 0);
    SliderSwatchComponent = tslib_1.__decorate([
        Component({
            selector: 'color-slider-swatch',
            template: "\n  <div class=\"slider-swatch\" [style.background]=\"background\"\n    [class.first]=\"first\" [class.last]=\"last\" [class.active]=\"active\"\n    (click)=\"handleClick($event)\"\n  ></div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .slider-swatch {\n      height: 12px;\n      background: rgb(121, 211, 166);\n      cursor: pointer;\n    }\n    .slider-swatch.active {\n      transform: scaleY(1.8);\n      border-top-right-radius: 3.6px 2px;\n      border-top-left-radius: 3.6px 2px;\n      border-bottom-right-radius: 3.6px 2px;\n      border-bottom-left-radius: 3.6px 2px;\n    }\n    .slider-swatch.first {\n      border-radius: 2px 0px 0px 2px;\n    }\n    .slider-swatch.last {\n      border-radius: 0px 2px 2px 0px;\n    }\n\n  "]
        })
    ], SliderSwatchComponent);
    return SliderSwatchComponent;
}());
export { SliderSwatchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXN3YXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtY29sb3Ivc2xpZGVyLyIsInNvdXJjZXMiOlsic2xpZGVyLXN3YXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBRUwsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBc0N2QjtJQWxDQTtRQXNDVyxVQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ2QsU0FBSSxHQUFHLEtBQUssQ0FBQztRQUNaLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBaUI5QyxDQUFDO0lBZEMsMkNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsZUFBVSxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsT0FBSSxDQUFDO0lBQ3JFLENBQUM7SUFDRCwyQ0FBVyxHQUFYLFVBQVksTUFBTTtRQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztZQUNoQixJQUFJLEVBQUU7Z0JBQ0osQ0FBQyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDYixDQUFDLEVBQUUsR0FBRztnQkFDTixDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU07Z0JBQ2QsTUFBTSxFQUFFLEtBQUs7YUFDZDtZQUNELE1BQU0sUUFBQTtTQUNQLENBQUMsQ0FBQztJQUNMLENBQUM7SUFyQlE7UUFBUixLQUFLLEVBQUU7O3NEQUFVO0lBQ1Q7UUFBUixLQUFLLEVBQUU7O3lEQUFpQjtJQUNoQjtRQUFSLEtBQUssRUFBRTs7eURBQWdCO0lBQ2Y7UUFBUixLQUFLLEVBQUU7O3dEQUFlO0lBQ2Q7UUFBUixLQUFLLEVBQUU7O3VEQUFjO0lBQ1o7UUFBVCxNQUFNLEVBQUU7OzBEQUFtQztJQU5qQyxxQkFBcUI7UUFsQ2pDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxxQkFBcUI7WUFDL0IsUUFBUSxFQUFFLHFNQUtUO1lBd0JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLG1CQUFtQixFQUFFLEtBQUs7cUJBdkJ4QiwrZkFvQkQ7U0FJRixDQUFDO09BQ1cscUJBQXFCLENBdUJqQztJQUFELDRCQUFDO0NBQUEsQUF2QkQsSUF1QkM7U0F2QlkscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25DaGFuZ2VzLFxuICBPdXRwdXQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBIU0wgfSBmcm9tICduZ3gtY29sb3InO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjb2xvci1zbGlkZXItc3dhdGNoJyxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdiBjbGFzcz1cInNsaWRlci1zd2F0Y2hcIiBbc3R5bGUuYmFja2dyb3VuZF09XCJiYWNrZ3JvdW5kXCJcbiAgICBbY2xhc3MuZmlyc3RdPVwiZmlyc3RcIiBbY2xhc3MubGFzdF09XCJsYXN0XCIgW2NsYXNzLmFjdGl2ZV09XCJhY3RpdmVcIlxuICAgIChjbGljayk9XCJoYW5kbGVDbGljaygkZXZlbnQpXCJcbiAgPjwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtcbiAgICBgXG4gICAgLnNsaWRlci1zd2F0Y2gge1xuICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgYmFja2dyb3VuZDogcmdiKDEyMSwgMjExLCAxNjYpO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuc2xpZGVyLXN3YXRjaC5hY3RpdmUge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZVkoMS44KTtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAzLjZweCAycHg7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAzLjZweCAycHg7XG4gICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMy42cHggMnB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMy42cHggMnB4O1xuICAgIH1cbiAgICAuc2xpZGVyLXN3YXRjaC5maXJzdCB7XG4gICAgICBib3JkZXItcmFkaXVzOiAycHggMHB4IDBweCAycHg7XG4gICAgfVxuICAgIC5zbGlkZXItc3dhdGNoLmxhc3Qge1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4IDJweCAycHggMHB4O1xuICAgIH1cblxuICBgLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFNsaWRlclN3YXRjaENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIGhzbDogSFNMO1xuICBASW5wdXQoKSBhY3RpdmU6IGJvb2xlYW47XG4gIEBJbnB1dCgpIG9mZnNldDogbnVtYmVyO1xuICBASW5wdXQoKSBmaXJzdCA9IGZhbHNlO1xuICBASW5wdXQoKSBsYXN0ID0gZmFsc2U7XG4gIEBPdXRwdXQoKSBvbkNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG4gIGJhY2tncm91bmQ6IHN0cmluZztcblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLmJhY2tncm91bmQgPSBgaHNsKCR7dGhpcy5oc2wuaH0sIDUwJSwgJHt0aGlzLm9mZnNldCAqIDEwMH0lKWA7XG4gIH1cbiAgaGFuZGxlQ2xpY2soJGV2ZW50KSB7XG4gICAgdGhpcy5vbkNsaWNrLmVtaXQoe1xuICAgICAgZGF0YToge1xuICAgICAgICBoOiB0aGlzLmhzbC5oLFxuICAgICAgICBzOiAwLjUsXG4gICAgICAgIGw6IHRoaXMub2Zmc2V0LFxuICAgICAgICBzb3VyY2U6ICdoc2wnLFxuICAgICAgfSxcbiAgICAgICRldmVudCxcbiAgICB9KTtcbiAgfVxufVxuIl19