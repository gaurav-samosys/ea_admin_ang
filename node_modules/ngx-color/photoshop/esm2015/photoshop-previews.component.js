import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
let PhotoshopPreviewsComponent = class PhotoshopPreviewsComponent {
    constructor() {
        this.currentColor = '';
        this.backgroundNew = '';
    }
    ngOnChanges() {
        this.backgroundNew = `rgb(${this.rgb.r},${this.rgb.g}, ${this.rgb.b})`;
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], PhotoshopPreviewsComponent.prototype, "rgb", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], PhotoshopPreviewsComponent.prototype, "currentColor", void 0);
PhotoshopPreviewsComponent = tslib_1.__decorate([
    Component({
        selector: 'color-photoshop-previews',
        template: `
  <div>
    <div class="photoshop-label">new</div>
    <div class="photoshop-swatches">
      <div class="photoshop-new" [style.background]="backgroundNew"></div>
      <div class="photoshop-current" [style.background]="currentColor"></div>
    </div>
    <div class="photoshop-label">current</div>
  </div>
  `,
        changeDetection: ChangeDetectionStrategy.OnPush,
        preserveWhitespaces: false,
        styles: [`
  .photoshop-swatches {
    border: 1px solid #B3B3B3;
    border-bottom: 1px solid #F0F0F0;
    margin-bottom: 2px;
    margin-top: 1px;
  }
  .photoshop-new {
    height: 34px;
    box-shadow: inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 1px 0 #000;
  }
  .photoshop-current {
    height: 34px;
    box-shadow: inset 1px 0 0 #000, inset -1px 0 0 #000, inset 0 -1px 0 #000;
  }
  .photoshop-label {
    font-size: 14px;
    color: #000;
    text-align: center;
  }
  `]
    })
], PhotoshopPreviewsComponent);
export { PhotoshopPreviewsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvdG9zaG9wLXByZXZpZXdzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1jb2xvci9waG90b3Nob3AvIiwic291cmNlcyI6WyJwaG90b3Nob3AtcHJldmlld3MuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxLQUFLLEdBRU4sTUFBTSxlQUFlLENBQUM7QUF5Q3ZCLElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQTBCO0lBdEN2QztRQXdDVyxpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUMzQixrQkFBYSxHQUFHLEVBQUUsQ0FBQztJQUtyQixDQUFDO0lBSEMsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLEdBQUcsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ3pFLENBQUM7Q0FDRixDQUFBO0FBUFU7SUFBUixLQUFLLEVBQUU7O3VEQUFVO0FBQ1Q7SUFBUixLQUFLLEVBQUU7O2dFQUFtQjtBQUZoQiwwQkFBMEI7SUF0Q3RDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSwwQkFBMEI7UUFDcEMsUUFBUSxFQUFFOzs7Ozs7Ozs7R0FTVDtRQXdCRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtRQUMvQyxtQkFBbUIsRUFBRSxLQUFLO2lCQXZCeEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBb0JEO0tBSUYsQ0FBQztHQUNXLDBCQUEwQixDQVF0QztTQVJZLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUkdCIH0gZnJvbSAnbmd4LWNvbG9yJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY29sb3ItcGhvdG9zaG9wLXByZXZpZXdzJyxcbiAgdGVtcGxhdGU6IGBcbiAgPGRpdj5cbiAgICA8ZGl2IGNsYXNzPVwicGhvdG9zaG9wLWxhYmVsXCI+bmV3PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInBob3Rvc2hvcC1zd2F0Y2hlc1wiPlxuICAgICAgPGRpdiBjbGFzcz1cInBob3Rvc2hvcC1uZXdcIiBbc3R5bGUuYmFja2dyb3VuZF09XCJiYWNrZ3JvdW5kTmV3XCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwicGhvdG9zaG9wLWN1cnJlbnRcIiBbc3R5bGUuYmFja2dyb3VuZF09XCJjdXJyZW50Q29sb3JcIj48L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwicGhvdG9zaG9wLWxhYmVsXCI+Y3VycmVudDwvZGl2PlxuICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAucGhvdG9zaG9wLXN3YXRjaGVzIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjQjNCM0IzO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRjBGMEYwO1xuICAgIG1hcmdpbi1ib3R0b206IDJweDtcbiAgICBtYXJnaW4tdG9wOiAxcHg7XG4gIH1cbiAgLnBob3Rvc2hvcC1uZXcge1xuICAgIGhlaWdodDogMzRweDtcbiAgICBib3gtc2hhZG93OiBpbnNldCAxcHggMCAwICMwMDAsIGluc2V0IC0xcHggMCAwICMwMDAsIGluc2V0IDAgMXB4IDAgIzAwMDtcbiAgfVxuICAucGhvdG9zaG9wLWN1cnJlbnQge1xuICAgIGhlaWdodDogMzRweDtcbiAgICBib3gtc2hhZG93OiBpbnNldCAxcHggMCAwICMwMDAsIGluc2V0IC0xcHggMCAwICMwMDAsIGluc2V0IDAgLTFweCAwICMwMDA7XG4gIH1cbiAgLnBob3Rvc2hvcC1sYWJlbCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICBgLFxuICBdLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJlc2VydmVXaGl0ZXNwYWNlczogZmFsc2UsXG59KVxuZXhwb3J0IGNsYXNzIFBob3Rvc2hvcFByZXZpZXdzQ29tcG9uZW50IGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgcmdiOiBSR0I7XG4gIEBJbnB1dCgpIGN1cnJlbnRDb2xvciA9ICcnO1xuICBiYWNrZ3JvdW5kTmV3ID0gJyc7XG5cbiAgbmdPbkNoYW5nZXMoKSB7XG4gICAgdGhpcy5iYWNrZ3JvdW5kTmV3ID0gYHJnYigke3RoaXMucmdiLnJ9LCR7dGhpcy5yZ2IuZ30sICR7dGhpcy5yZ2IuYn0pYDtcbiAgfVxufVxuIl19