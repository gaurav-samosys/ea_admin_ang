import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, } from '@angular/core';
var GithubSwatchComponent = /** @class */ (function () {
    function GithubSwatchComponent() {
        this.onClick = new EventEmitter();
        this.onSwatchHover = new EventEmitter();
    }
    GithubSwatchComponent.prototype.handleClick = function (_a) {
        var hex = _a.hex, $event = _a.$event;
        this.onClick.emit({ hex: hex, $event: $event });
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], GithubSwatchComponent.prototype, "color", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], GithubSwatchComponent.prototype, "onClick", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], GithubSwatchComponent.prototype, "onSwatchHover", void 0);
    GithubSwatchComponent = tslib_1.__decorate([
        Component({
            selector: 'color-github-swatch',
            template: "\n  <div class=\"github-swatch\">\n    <color-swatch\n      [color]=\"color\"\n      [style]=\"swatchStyle\"\n      (onClick)=\"handleClick($event)\"\n      (onHover)=\"onSwatchHover.emit($event)\"\n      class=\"swatch\"\n    ></color-swatch>\n    <div class=\"clear\"></div>\n  </div>\n  ",
            changeDetection: ChangeDetectionStrategy.OnPush,
            preserveWhitespaces: false,
            styles: ["\n    .github-swatch {\n      width: 25px;\n      height: 25px;\n      font-size: 0;\n    }\n    .github-swatch:hover {\n      position: relative;\n      z-index: 2;\n      outline: 2px solid #fff;\n      box-shadow: 0 0 5px 2px rgba(0,0,0,0.25);\n    }\n  "]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], GithubSwatchComponent);
    return GithubSwatchComponent;
}());
export { GithubSwatchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLXN3YXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtY29sb3IvZ2l0aHViLyIsInNvdXJjZXMiOlsiZ2l0aHViLXN3YXRjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCx1QkFBdUIsRUFDdkIsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxHQUNQLE1BQU0sZUFBZSxDQUFDO0FBa0N2QjtJQU1FO1FBSlUsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDbEMsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO0lBR25DLENBQUM7SUFFaEIsMkNBQVcsR0FBWCxVQUFZLEVBQWU7WUFBYixZQUFHLEVBQUUsa0JBQU07UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEtBQUEsRUFBRSxNQUFNLFFBQUEsRUFBRSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQVRRO1FBQVIsS0FBSyxFQUFFOzt3REFBZTtJQUNiO1FBQVQsTUFBTSxFQUFFOzswREFBbUM7SUFDbEM7UUFBVCxNQUFNLEVBQUU7O2dFQUF5QztJQUh2QyxxQkFBcUI7UUFoQ2pDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxxQkFBcUI7WUFDL0IsUUFBUSxFQUFFLG9TQVdUO1lBZ0JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO1lBQy9DLG1CQUFtQixFQUFFLEtBQUs7cUJBZnhCLG1RQVlEO1NBSUYsQ0FBQzs7T0FDVyxxQkFBcUIsQ0FXakM7SUFBRCw0QkFBQztDQUFBLEFBWEQsSUFXQztTQVhZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2NvbG9yLWdpdGh1Yi1zd2F0Y2gnLFxuICB0ZW1wbGF0ZTogYFxuICA8ZGl2IGNsYXNzPVwiZ2l0aHViLXN3YXRjaFwiPlxuICAgIDxjb2xvci1zd2F0Y2hcbiAgICAgIFtjb2xvcl09XCJjb2xvclwiXG4gICAgICBbc3R5bGVdPVwic3dhdGNoU3R5bGVcIlxuICAgICAgKG9uQ2xpY2spPVwiaGFuZGxlQ2xpY2soJGV2ZW50KVwiXG4gICAgICAob25Ib3Zlcik9XCJvblN3YXRjaEhvdmVyLmVtaXQoJGV2ZW50KVwiXG4gICAgICBjbGFzcz1cInN3YXRjaFwiXG4gICAgPjwvY29sb3Itc3dhdGNoPlxuICAgIDxkaXYgY2xhc3M9XCJjbGVhclwiPjwvZGl2PlxuICA8L2Rpdj5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgIC5naXRodWItc3dhdGNoIHtcbiAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgZm9udC1zaXplOiAwO1xuICAgIH1cbiAgICAuZ2l0aHViLXN3YXRjaDpob3ZlciB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAyO1xuICAgICAgb3V0bGluZTogMnB4IHNvbGlkICNmZmY7XG4gICAgICBib3gtc2hhZG93OiAwIDAgNXB4IDJweCByZ2JhKDAsMCwwLDAuMjUpO1xuICAgIH1cbiAgYCxcbiAgXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxufSlcbmV4cG9ydCBjbGFzcyBHaXRodWJTd2F0Y2hDb21wb25lbnQge1xuICBASW5wdXQoKSBjb2xvcjogc3RyaW5nO1xuICBAT3V0cHV0KCkgb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgb25Td2F0Y2hIb3ZlciA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBzd2F0Y2hTdHlsZTogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgaGFuZGxlQ2xpY2soeyBoZXgsICRldmVudCB9KSB7XG4gICAgdGhpcy5vbkNsaWNrLmVtaXQoeyBoZXgsICRldmVudCB9KTtcbiAgfVxufVxuIl19